{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useState, useRef } from 'react';\nfunction findBestSourceForSize(sources, size) {\n  var _map$sort$sort$0$sour, _ref, _ref$map$sort$sort$;\n  return (_map$sort$sort$0$sour = (_ref = _toConsumableArray(sources || [])) == null ? void 0 : (_ref$map$sort$sort$ = _ref.map(function (source) {\n    if (!size) {\n      return {\n        source: source,\n        penalty: 0,\n        covers: false\n      };\n    }\n    var _ref2 = typeof source === 'object' ? source : {\n        width: null,\n        height: null\n      },\n      width = _ref2.width,\n      height = _ref2.height;\n    if (width == null || height == null) {\n      return {\n        source: source,\n        penalty: 0,\n        covers: false\n      };\n    }\n    if (width < size.width || height < size.height) {\n      return {\n        source: source,\n        penalty: Math.max(size.width - width, size.height - height),\n        covers: false\n      };\n    }\n    return {\n      source: source,\n      penalty: (width - size.width) * (height - size.height),\n      covers: true\n    };\n  }).sort(function (a, b) {\n    return a.penalty - b.penalty;\n  }).sort(function (a, b) {\n    return Number(b.covers) - Number(a.covers);\n  })[0]) == null ? void 0 : _ref$map$sort$sort$.source) != null ? _map$sort$sort$0$sour : null;\n}\nexport default function useSourceSelection(sources) {\n  var _sources$length, _ref3;\n  var sizeCalculation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'live';\n  var measurementCallback = arguments.length > 2 ? arguments[2] : undefined;\n  var hasMoreThanOneSource = ((_sources$length = sources == null ? void 0 : sources.length) != null ? _sources$length : 0) > 1;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    size = _useState2[0],\n    setSize = _useState2[1];\n  var resizeObserver = useRef(null);\n  React.useEffect(function () {\n    return function () {\n      var _resizeObserver$curre;\n      (_resizeObserver$curre = resizeObserver.current) == null ? void 0 : _resizeObserver$curre.disconnect();\n    };\n  }, []);\n  var containerRef = React.useCallback(function (element) {\n    if (!hasMoreThanOneSource && !measurementCallback) {\n      return;\n    }\n    var rect = element == null ? void 0 : element.getBoundingClientRect();\n    measurementCallback == null ? void 0 : measurementCallback(element, rect);\n    setSize(rect);\n    if (sizeCalculation === 'live') {\n      var _resizeObserver$curre2;\n      (_resizeObserver$curre2 = resizeObserver.current) == null ? void 0 : _resizeObserver$curre2.disconnect();\n      if (!element) {\n        return;\n      }\n      resizeObserver.current = new ResizeObserver(function (entries) {\n        setSize(entries[0].contentRect);\n        measurementCallback == null ? void 0 : measurementCallback(entries[0].target, entries[0].contentRect);\n      });\n      resizeObserver.current.observe(element);\n    }\n  }, [hasMoreThanOneSource, sizeCalculation]);\n  var bestSourceForSize = size !== undefined ? findBestSourceForSize(sources, size) : null;\n  var source = (_ref3 = hasMoreThanOneSource ? bestSourceForSize : sources == null ? void 0 : sources[0]) != null ? _ref3 : null;\n  return React.useMemo(function () {\n    return {\n      containerRef: containerRef,\n      source: source\n    };\n  }, [source]);\n}","map":{"version":3,"names":["React","useState","useRef","findBestSourceForSize","sources","size","_map$sort$sort$0$sour","_ref","_ref$map$sort$sort$","_toConsumableArray","map","source","penalty","covers","_ref2","width","height","Math","max","sort","a","b","Number","useSourceSelection","_sources$length","_ref3","sizeCalculation","arguments","length","undefined","measurementCallback","hasMoreThanOneSource","_useState","_useState2","_slicedToArray","setSize","resizeObserver","useEffect","_resizeObserver$curre","current","disconnect","containerRef","useCallback","element","rect","getBoundingClientRect","_resizeObserver$curre2","ResizeObserver","entries","contentRect","target","observe","bestSourceForSize","useMemo"],"sources":["G:\\Pro\\locofy-react-native-project (3)\\node_modules\\expo-image\\src\\web\\useSourceSelection.ts"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport { ImageProps, ImageSource } from '../Image.types';\n\nfunction findBestSourceForSize(\n  sources: ImageSource[] | undefined,\n  size: DOMRect | null\n): ImageSource | null {\n  return (\n    [...(sources || [])]\n      // look for the smallest image that's still larger then a container\n      ?.map((source) => {\n        if (!size) {\n          return { source, penalty: 0, covers: false };\n        }\n        const { width, height } =\n          typeof source === 'object' ? source : { width: null, height: null };\n        if (width == null || height == null) {\n          return { source, penalty: 0, covers: false };\n        }\n        if (width < size.width || height < size.height) {\n          return {\n            source,\n            penalty: Math.max(size.width - width, size.height - height),\n            covers: false,\n          };\n        }\n        return { source, penalty: (width - size.width) * (height - size.height), covers: true };\n      })\n      .sort((a, b) => a.penalty - b.penalty)\n      .sort((a, b) => Number(b.covers) - Number(a.covers))[0]?.source ?? null\n  );\n}\n\nexport default function useSourceSelection(\n  sources?: ImageSource[],\n  sizeCalculation: ImageProps['responsivePolicy'] = 'live',\n  measurementCallback?: (target: HTMLElement, size: DOMRect) => void\n) {\n  const hasMoreThanOneSource = (sources?.length ?? 0) > 1;\n  // null - not calculated yet, DOMRect - size available\n  const [size, setSize] = useState<null | DOMRect>(null);\n  const resizeObserver = useRef<ResizeObserver | null>(null);\n\n  React.useEffect(() => {\n    return () => {\n      resizeObserver.current?.disconnect();\n    };\n  }, []);\n\n  const containerRef = React.useCallback(\n    (element: HTMLDivElement) => {\n      if (!hasMoreThanOneSource && !measurementCallback) {\n        return;\n      }\n      const rect = element?.getBoundingClientRect();\n      measurementCallback?.(element, rect);\n      setSize(rect);\n\n      if (sizeCalculation === 'live') {\n        resizeObserver.current?.disconnect();\n        if (!element) {\n          return;\n        }\n        resizeObserver.current = new ResizeObserver((entries) => {\n          setSize(entries[0].contentRect);\n          measurementCallback?.(entries[0].target as any, entries[0].contentRect);\n        });\n        resizeObserver.current.observe(element);\n      }\n    },\n    [hasMoreThanOneSource, sizeCalculation]\n  );\n\n  const bestSourceForSize = size !== undefined ? findBestSourceForSize(sources, size) : null;\n  const source = (hasMoreThanOneSource ? bestSourceForSize : sources?.[0]) ?? null;\n\n  return React.useMemo(\n    () => ({\n      containerRef,\n      source,\n    }),\n    [source]\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}